<?php
/**
 * Plugin Name:       {{title}}
{{#pluginURI}}
 * Plugin URI:        {{{pluginURI}}}
{{/pluginURI}}
{{#description}}
 * Description:       {{description}}
{{/description}}
 * Version:           {{version}}
 * Requires at least: 5.9
 * Requires PHP:      7.0
{{#author}}
 * Author:            {{author}}
{{/author}}
{{#license}}
 * License:           {{license}}
{{/license}}
{{#licenseURI}}
 * License URI:       {{{licenseURI}}}
{{/licenseURI}}
 * Text Domain:       {{textdomain}}
{{#domainPath}}
 * Domain Path:       {{{domainPath}}}
{{/domainPath}}
{{#updateURI}}
 * Update URI:        {{{updateURI}}}
{{/updateURI}}
 *
 * @package           {{namespace}}
 */

if( ! defined('{{slugPascalCase}}_DIR') ){
	define( '{{slugPascalCase}}_DIR', __DIR__ );
}

if( ! defined('{{slugPascalCase}}_URI') ){
	${{namespace}}_{{namespace}}_{{slugSnakeCase}}_doc_root = isset( $_SERVER['DOCUMENT_ROOT'] ) ? sanitize_text_field( wp_unslash( $_SERVER['DOCUMENT_ROOT'] ) ) : '';
	define( '{{slugPascalCase}}_URI', esc_url( str_replace( ${{namespace}}_{{namespace}}_{{slugSnakeCase}}_doc_root, '', __DIR__ ) ) );
}

if( ! defined('{{slugPascalCase}}_DEBUG') ){
	define('{{slugPascalCase}}_DEBUG', false);
}

/**
 * Include {{namespace}} Core Functionality 
 */ 
foreach ( glob( {{slugPascalCase}}_DIR . '/core/*.php' ) as $file ) {
	require_once $file;
}

/**
 * Include {{title}} Functionality 
 */ 
foreach ( glob( {{slugPascalCase}}_DIR . '/inc/*.php' ) as $file ) {
	require_once $file;
}

/**
 * Plugin API/Action Reference
 * Actions Run During a Typical Request
 *
 * @link https://codex.wordpress.org/Plugin_API/Action_Reference#Actions_Run_During_a_Typical_Request
 */
add_action( 'init', '{{namespace}}_{{slugSnakeCase}}_init' );
add_action( 'wp_enqueue_scripts', '{{namespace}}_{{slugSnakeCase}}_wp_enqueue_scripts' );

if( ! function_exists('{{namespace}}_{{slugSnakeCase}}_init') ){
	/**
	 * {{title}} Initialization
	 *
	 * Fires after WordPress has finished loading but before any headers are sent.
	 * Include Gutenberg Block assets by getting the index file of each block build file.
	 *
	 * @link https://developer.wordpress.org/reference/hooks/init/
	 * @return void
	*/
	function {{namespace}}_{{slugSnakeCase}}_init() {	
		global $pagenow;

		/**
		* Enqueues the default ThickBox js and css. (if not on the login page or customizer page)
		*
		* @link https://developer.wordpress.org/reference/functions/add_thickbox/
		*/
		if ( ! in_array( $pagenow, array( 'wp-login.php', 'customize.php' ), true ) ) {
			add_thickbox();
		}
			
		// if editing a page/post register compiled Gutenberg Block bundles.
		if ( in_array( $pagenow, array( 'post.php', 'post-new.php' ), true ) ) {

			wp_enqueue_style( '{{namespace}}-{{slug}}', {{namespace}}_{{slugSnakeCase}}_get_min_file( '/css/{{slug}}.css' ), array());
		}

		$block_args = array(
			'render_callback' => '{{namespace}}_{{slugSnakeCase}}_block_renderer',
		);

		/**
		 * Registers the block using the metadata loaded from the `block.json` file.
		 * Behind the scenes, it registers also all assets so they can be enqueued
		 * through the block editor in the corresponding context.
		 *
		 * @see https://developer.wordpress.org/reference/functions/register_block_type/
		*/
		register_block_type( {{slugPascalCase}}_DIR . '/build', $block_args );
	}
}

if( ! function_exists('{{namespace}}_{{slugSnakeCase}}_wp_enqueue_scripts') ){
	/**
	* Register {{title}} scripts/styles
	*
	* Fires when scripts and styles are enqueued.
	*
	* @category add_action( 'wp_enqueue_scripts', '{{namespace}}_{{slugSnakeCase}}_wp_enqueue_scripts' );
	* @link https://developer.wordpress.org/reference/hooks/wp_enqueue_scripts/
	*
	* @return void
	*/
	function {{namespace}}_{{slugSnakeCase}}_wp_enqueue_scripts() {

		// Register compiled Gutenberg Block bundles.
		wp_enqueue_script( '{{namespace}}-{{slug}}', {{namespace}}_{{slugSnakeCase}}_get_min_file( '/js/{{slug}}.js', 'js' ), array(), '', true );

		wp_enqueue_style( '{{namespace}}-{{slug}}', {{namespace}}_{{slugSnakeCase}}_get_min_file( '/css/{{slug}}.css' ), array(), '' );

	}
}
